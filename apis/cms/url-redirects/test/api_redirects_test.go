/*
URL redirects

Testing RedirectsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package url-redirects

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/pyscht/hubspot-go-api/apis/cms/url-redirects"
)

func Test_url-redirects_RedirectsApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test RedirectsApiService DeleteCmsV3UrlRedirectsUrlRedirectIdArchive", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var urlRedirectId string

		httpRes, err := apiClient.RedirectsApi.DeleteCmsV3UrlRedirectsUrlRedirectIdArchive(context.Background(), urlRedirectId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RedirectsApiService GetCmsV3UrlRedirectsGetPage", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.RedirectsApi.GetCmsV3UrlRedirectsGetPage(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RedirectsApiService GetCmsV3UrlRedirectsUrlRedirectIdGetById", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var urlRedirectId string

		resp, httpRes, err := apiClient.RedirectsApi.GetCmsV3UrlRedirectsUrlRedirectIdGetById(context.Background(), urlRedirectId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RedirectsApiService PatchCmsV3UrlRedirectsUrlRedirectIdUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var urlRedirectId string

		resp, httpRes, err := apiClient.RedirectsApi.PatchCmsV3UrlRedirectsUrlRedirectIdUpdate(context.Background(), urlRedirectId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RedirectsApiService PostCmsV3UrlRedirectsCreate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.RedirectsApi.PostCmsV3UrlRedirectsCreate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
