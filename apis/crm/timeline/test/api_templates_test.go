/*
Timeline events

Testing TemplatesApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package timeline

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/pyscht/hubspot-go-api/apis/crm/timeline"
)

func Test_timeline_TemplatesApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test TemplatesApiService DeleteIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdArchive", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var eventTemplateId string
		var appId int32

		httpRes, err := apiClient.TemplatesApi.DeleteIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdArchive(context.Background(), eventTemplateId, appId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TemplatesApiService GetIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdGetById", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var eventTemplateId string
		var appId int32

		resp, httpRes, err := apiClient.TemplatesApi.GetIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdGetById(context.Background(), eventTemplateId, appId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TemplatesApiService GetIntegratorsTimelineV3AppIdEventTemplatesGetAll", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var appId int32

		resp, httpRes, err := apiClient.TemplatesApi.GetIntegratorsTimelineV3AppIdEventTemplatesGetAll(context.Background(), appId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TemplatesApiService PostIntegratorsTimelineV3AppIdEventTemplatesCreate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var appId int32

		resp, httpRes, err := apiClient.TemplatesApi.PostIntegratorsTimelineV3AppIdEventTemplatesCreate(context.Background(), appId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TemplatesApiService PutIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var eventTemplateId string
		var appId int32

		resp, httpRes, err := apiClient.TemplatesApi.PutIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdUpdate(context.Background(), eventTemplateId, appId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
