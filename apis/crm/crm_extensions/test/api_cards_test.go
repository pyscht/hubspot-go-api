/*
CRM cards

Testing CardsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package crm_extensions

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/pyscht/hubspot-go-api/apis/crm/crm_extensions"
)

func Test_crm_extensions_CardsApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CardsApiService DeleteCrmV3ExtensionsCardsAppIdCardIdArchive", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var appId int32
		var cardId string

		httpRes, err := apiClient.CardsApi.DeleteCrmV3ExtensionsCardsAppIdCardIdArchive(context.Background(), appId, cardId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CardsApiService GetCrmV3ExtensionsCardsAppIdCardIdGetById", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var appId int32
		var cardId string

		resp, httpRes, err := apiClient.CardsApi.GetCrmV3ExtensionsCardsAppIdCardIdGetById(context.Background(), appId, cardId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CardsApiService GetCrmV3ExtensionsCardsAppIdGetAll", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var appId int32

		resp, httpRes, err := apiClient.CardsApi.GetCrmV3ExtensionsCardsAppIdGetAll(context.Background(), appId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CardsApiService PatchCrmV3ExtensionsCardsAppIdCardIdUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var appId int32
		var cardId string

		resp, httpRes, err := apiClient.CardsApi.PatchCrmV3ExtensionsCardsAppIdCardIdUpdate(context.Background(), appId, cardId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CardsApiService PostCrmV3ExtensionsCardsAppIdCreate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var appId int32

		resp, httpRes, err := apiClient.CardsApi.PostCrmV3ExtensionsCardsAppIdCreate(context.Background(), appId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
