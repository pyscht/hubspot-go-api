/*
Custom Workflow Actions

Create custom workflow actions

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package actions

import (
	"encoding/json"
)

// checks if the ExtensionActionDefinitionInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtensionActionDefinitionInput{}

// ExtensionActionDefinitionInput State of custom workflow action to be created.
type ExtensionActionDefinitionInput struct {
	// A list of functions associated with the custom workflow action.
	Functions []ActionFunction `json:"functions"`
	// The URL that will accept an HTTPS request each time workflows executes the custom action.
	ActionUrl string `json:"actionUrl"`
	// Whether this custom action is published to customers.
	Published bool `json:"published"`
	// The date that this custom action was archived, if the custom action is archived.
	ArchivedAt *int64 `json:"archivedAt,omitempty"`
	// The list of input fields to display in this custom action.
	InputFields          []InputFieldDefinition `json:"inputFields"`
	ObjectRequestOptions *ObjectRequestOptions  `json:"objectRequestOptions,omitempty"`
	// A list of dependencies between the input fields. These configure when the input fields should be visible.
	InputFieldDependencies []ExtensionActionDefinitionPatchInputFieldDependenciesInner `json:"inputFieldDependencies,omitempty"`
	// The user-facing labels for the custom action.
	Labels map[string]ActionLabels `json:"labels"`
	// The object types that this custom action supports.
	ObjectTypes []string `json:"objectTypes"`
}

// NewExtensionActionDefinitionInput instantiates a new ExtensionActionDefinitionInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtensionActionDefinitionInput(functions []ActionFunction, actionUrl string, published bool, inputFields []InputFieldDefinition, labels map[string]ActionLabels, objectTypes []string) *ExtensionActionDefinitionInput {
	this := ExtensionActionDefinitionInput{}
	this.Functions = functions
	this.ActionUrl = actionUrl
	this.Published = published
	this.InputFields = inputFields
	this.Labels = labels
	this.ObjectTypes = objectTypes
	return &this
}

// NewExtensionActionDefinitionInputWithDefaults instantiates a new ExtensionActionDefinitionInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtensionActionDefinitionInputWithDefaults() *ExtensionActionDefinitionInput {
	this := ExtensionActionDefinitionInput{}
	return &this
}

// GetFunctions returns the Functions field value
func (o *ExtensionActionDefinitionInput) GetFunctions() []ActionFunction {
	if o == nil {
		var ret []ActionFunction
		return ret
	}

	return o.Functions
}

// GetFunctionsOk returns a tuple with the Functions field value
// and a boolean to check if the value has been set.
func (o *ExtensionActionDefinitionInput) GetFunctionsOk() ([]ActionFunction, bool) {
	if o == nil {
		return nil, false
	}
	return o.Functions, true
}

// SetFunctions sets field value
func (o *ExtensionActionDefinitionInput) SetFunctions(v []ActionFunction) {
	o.Functions = v
}

// GetActionUrl returns the ActionUrl field value
func (o *ExtensionActionDefinitionInput) GetActionUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActionUrl
}

// GetActionUrlOk returns a tuple with the ActionUrl field value
// and a boolean to check if the value has been set.
func (o *ExtensionActionDefinitionInput) GetActionUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionUrl, true
}

// SetActionUrl sets field value
func (o *ExtensionActionDefinitionInput) SetActionUrl(v string) {
	o.ActionUrl = v
}

// GetPublished returns the Published field value
func (o *ExtensionActionDefinitionInput) GetPublished() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Published
}

// GetPublishedOk returns a tuple with the Published field value
// and a boolean to check if the value has been set.
func (o *ExtensionActionDefinitionInput) GetPublishedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Published, true
}

// SetPublished sets field value
func (o *ExtensionActionDefinitionInput) SetPublished(v bool) {
	o.Published = v
}

// GetArchivedAt returns the ArchivedAt field value if set, zero value otherwise.
func (o *ExtensionActionDefinitionInput) GetArchivedAt() int64 {
	if o == nil || IsNil(o.ArchivedAt) {
		var ret int64
		return ret
	}
	return *o.ArchivedAt
}

// GetArchivedAtOk returns a tuple with the ArchivedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionActionDefinitionInput) GetArchivedAtOk() (*int64, bool) {
	if o == nil || IsNil(o.ArchivedAt) {
		return nil, false
	}
	return o.ArchivedAt, true
}

// HasArchivedAt returns a boolean if a field has been set.
func (o *ExtensionActionDefinitionInput) HasArchivedAt() bool {
	if o != nil && !IsNil(o.ArchivedAt) {
		return true
	}

	return false
}

// SetArchivedAt gets a reference to the given int64 and assigns it to the ArchivedAt field.
func (o *ExtensionActionDefinitionInput) SetArchivedAt(v int64) {
	o.ArchivedAt = &v
}

// GetInputFields returns the InputFields field value
func (o *ExtensionActionDefinitionInput) GetInputFields() []InputFieldDefinition {
	if o == nil {
		var ret []InputFieldDefinition
		return ret
	}

	return o.InputFields
}

// GetInputFieldsOk returns a tuple with the InputFields field value
// and a boolean to check if the value has been set.
func (o *ExtensionActionDefinitionInput) GetInputFieldsOk() ([]InputFieldDefinition, bool) {
	if o == nil {
		return nil, false
	}
	return o.InputFields, true
}

// SetInputFields sets field value
func (o *ExtensionActionDefinitionInput) SetInputFields(v []InputFieldDefinition) {
	o.InputFields = v
}

// GetObjectRequestOptions returns the ObjectRequestOptions field value if set, zero value otherwise.
func (o *ExtensionActionDefinitionInput) GetObjectRequestOptions() ObjectRequestOptions {
	if o == nil || IsNil(o.ObjectRequestOptions) {
		var ret ObjectRequestOptions
		return ret
	}
	return *o.ObjectRequestOptions
}

// GetObjectRequestOptionsOk returns a tuple with the ObjectRequestOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionActionDefinitionInput) GetObjectRequestOptionsOk() (*ObjectRequestOptions, bool) {
	if o == nil || IsNil(o.ObjectRequestOptions) {
		return nil, false
	}
	return o.ObjectRequestOptions, true
}

// HasObjectRequestOptions returns a boolean if a field has been set.
func (o *ExtensionActionDefinitionInput) HasObjectRequestOptions() bool {
	if o != nil && !IsNil(o.ObjectRequestOptions) {
		return true
	}

	return false
}

// SetObjectRequestOptions gets a reference to the given ObjectRequestOptions and assigns it to the ObjectRequestOptions field.
func (o *ExtensionActionDefinitionInput) SetObjectRequestOptions(v ObjectRequestOptions) {
	o.ObjectRequestOptions = &v
}

// GetInputFieldDependencies returns the InputFieldDependencies field value if set, zero value otherwise.
func (o *ExtensionActionDefinitionInput) GetInputFieldDependencies() []ExtensionActionDefinitionPatchInputFieldDependenciesInner {
	if o == nil || IsNil(o.InputFieldDependencies) {
		var ret []ExtensionActionDefinitionPatchInputFieldDependenciesInner
		return ret
	}
	return o.InputFieldDependencies
}

// GetInputFieldDependenciesOk returns a tuple with the InputFieldDependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionActionDefinitionInput) GetInputFieldDependenciesOk() ([]ExtensionActionDefinitionPatchInputFieldDependenciesInner, bool) {
	if o == nil || IsNil(o.InputFieldDependencies) {
		return nil, false
	}
	return o.InputFieldDependencies, true
}

// HasInputFieldDependencies returns a boolean if a field has been set.
func (o *ExtensionActionDefinitionInput) HasInputFieldDependencies() bool {
	if o != nil && !IsNil(o.InputFieldDependencies) {
		return true
	}

	return false
}

// SetInputFieldDependencies gets a reference to the given []ExtensionActionDefinitionPatchInputFieldDependenciesInner and assigns it to the InputFieldDependencies field.
func (o *ExtensionActionDefinitionInput) SetInputFieldDependencies(v []ExtensionActionDefinitionPatchInputFieldDependenciesInner) {
	o.InputFieldDependencies = v
}

// GetLabels returns the Labels field value
func (o *ExtensionActionDefinitionInput) GetLabels() map[string]ActionLabels {
	if o == nil {
		var ret map[string]ActionLabels
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *ExtensionActionDefinitionInput) GetLabelsOk() (*map[string]ActionLabels, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Labels, true
}

// SetLabels sets field value
func (o *ExtensionActionDefinitionInput) SetLabels(v map[string]ActionLabels) {
	o.Labels = v
}

// GetObjectTypes returns the ObjectTypes field value
func (o *ExtensionActionDefinitionInput) GetObjectTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ObjectTypes
}

// GetObjectTypesOk returns a tuple with the ObjectTypes field value
// and a boolean to check if the value has been set.
func (o *ExtensionActionDefinitionInput) GetObjectTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObjectTypes, true
}

// SetObjectTypes sets field value
func (o *ExtensionActionDefinitionInput) SetObjectTypes(v []string) {
	o.ObjectTypes = v
}

func (o ExtensionActionDefinitionInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtensionActionDefinitionInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["functions"] = o.Functions
	toSerialize["actionUrl"] = o.ActionUrl
	toSerialize["published"] = o.Published
	if !IsNil(o.ArchivedAt) {
		toSerialize["archivedAt"] = o.ArchivedAt
	}
	toSerialize["inputFields"] = o.InputFields
	if !IsNil(o.ObjectRequestOptions) {
		toSerialize["objectRequestOptions"] = o.ObjectRequestOptions
	}
	if !IsNil(o.InputFieldDependencies) {
		toSerialize["inputFieldDependencies"] = o.InputFieldDependencies
	}
	toSerialize["labels"] = o.Labels
	toSerialize["objectTypes"] = o.ObjectTypes
	return toSerialize, nil
}

type NullableExtensionActionDefinitionInput struct {
	value *ExtensionActionDefinitionInput
	isSet bool
}

func (v NullableExtensionActionDefinitionInput) Get() *ExtensionActionDefinitionInput {
	return v.value
}

func (v *NullableExtensionActionDefinitionInput) Set(val *ExtensionActionDefinitionInput) {
	v.value = val
	v.isSet = true
}

func (v NullableExtensionActionDefinitionInput) IsSet() bool {
	return v.isSet
}

func (v *NullableExtensionActionDefinitionInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtensionActionDefinitionInput(val *ExtensionActionDefinitionInput) *NullableExtensionActionDefinitionInput {
	return &NullableExtensionActionDefinitionInput{value: val, isSet: true}
}

func (v NullableExtensionActionDefinitionInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtensionActionDefinitionInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
