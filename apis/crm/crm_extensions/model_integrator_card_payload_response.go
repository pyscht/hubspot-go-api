/*
CRM cards

Allows an app to extend the CRM UI by surfacing custom cards in the sidebar of record pages. These cards are defined up-front as part of app configuration, then populated by external data fetch requests when the record page is accessed by a user.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm_extensions

import (
	"encoding/json"
)

// checks if the IntegratorCardPayloadResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegratorCardPayloadResponse{}

// IntegratorCardPayloadResponse The card details payload, sent to HubSpot by an app in response to a data fetch request when a user visits a CRM record page.
type IntegratorCardPayloadResponse struct {
	// The total number of card properties that will be sent in this response.
	TotalCount int32 `json:"totalCount"`
	// URL to a page the integrator has built that displays all details for this card. This URL will be displayed to users under a `See more [x]` link if there are more than five items in your response, where `[x]` is the value of `itemLabel`.
	AllItemsLinkUrl *string `json:"allItemsLinkUrl,omitempty"`
	// The label to be used for the `allItemsLinkUrl` link (e.g. 'See more tickets'). If not provided, this falls back to the card's title.
	CardLabel       *string          `json:"cardLabel,omitempty"`
	TopLevelActions *TopLevelActions `json:"topLevelActions,omitempty"`
	// A list of up to five valid card sub categories.
	Sections        []IntegratorObjectResult `json:"sections,omitempty"`
	ResponseVersion *string                  `json:"responseVersion,omitempty"`
}

// NewIntegratorCardPayloadResponse instantiates a new IntegratorCardPayloadResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegratorCardPayloadResponse(totalCount int32) *IntegratorCardPayloadResponse {
	this := IntegratorCardPayloadResponse{}
	this.TotalCount = totalCount
	return &this
}

// NewIntegratorCardPayloadResponseWithDefaults instantiates a new IntegratorCardPayloadResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegratorCardPayloadResponseWithDefaults() *IntegratorCardPayloadResponse {
	this := IntegratorCardPayloadResponse{}
	return &this
}

// GetTotalCount returns the TotalCount field value
func (o *IntegratorCardPayloadResponse) GetTotalCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value
// and a boolean to check if the value has been set.
func (o *IntegratorCardPayloadResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalCount, true
}

// SetTotalCount sets field value
func (o *IntegratorCardPayloadResponse) SetTotalCount(v int32) {
	o.TotalCount = v
}

// GetAllItemsLinkUrl returns the AllItemsLinkUrl field value if set, zero value otherwise.
func (o *IntegratorCardPayloadResponse) GetAllItemsLinkUrl() string {
	if o == nil || IsNil(o.AllItemsLinkUrl) {
		var ret string
		return ret
	}
	return *o.AllItemsLinkUrl
}

// GetAllItemsLinkUrlOk returns a tuple with the AllItemsLinkUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegratorCardPayloadResponse) GetAllItemsLinkUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AllItemsLinkUrl) {
		return nil, false
	}
	return o.AllItemsLinkUrl, true
}

// HasAllItemsLinkUrl returns a boolean if a field has been set.
func (o *IntegratorCardPayloadResponse) HasAllItemsLinkUrl() bool {
	if o != nil && !IsNil(o.AllItemsLinkUrl) {
		return true
	}

	return false
}

// SetAllItemsLinkUrl gets a reference to the given string and assigns it to the AllItemsLinkUrl field.
func (o *IntegratorCardPayloadResponse) SetAllItemsLinkUrl(v string) {
	o.AllItemsLinkUrl = &v
}

// GetCardLabel returns the CardLabel field value if set, zero value otherwise.
func (o *IntegratorCardPayloadResponse) GetCardLabel() string {
	if o == nil || IsNil(o.CardLabel) {
		var ret string
		return ret
	}
	return *o.CardLabel
}

// GetCardLabelOk returns a tuple with the CardLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegratorCardPayloadResponse) GetCardLabelOk() (*string, bool) {
	if o == nil || IsNil(o.CardLabel) {
		return nil, false
	}
	return o.CardLabel, true
}

// HasCardLabel returns a boolean if a field has been set.
func (o *IntegratorCardPayloadResponse) HasCardLabel() bool {
	if o != nil && !IsNil(o.CardLabel) {
		return true
	}

	return false
}

// SetCardLabel gets a reference to the given string and assigns it to the CardLabel field.
func (o *IntegratorCardPayloadResponse) SetCardLabel(v string) {
	o.CardLabel = &v
}

// GetTopLevelActions returns the TopLevelActions field value if set, zero value otherwise.
func (o *IntegratorCardPayloadResponse) GetTopLevelActions() TopLevelActions {
	if o == nil || IsNil(o.TopLevelActions) {
		var ret TopLevelActions
		return ret
	}
	return *o.TopLevelActions
}

// GetTopLevelActionsOk returns a tuple with the TopLevelActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegratorCardPayloadResponse) GetTopLevelActionsOk() (*TopLevelActions, bool) {
	if o == nil || IsNil(o.TopLevelActions) {
		return nil, false
	}
	return o.TopLevelActions, true
}

// HasTopLevelActions returns a boolean if a field has been set.
func (o *IntegratorCardPayloadResponse) HasTopLevelActions() bool {
	if o != nil && !IsNil(o.TopLevelActions) {
		return true
	}

	return false
}

// SetTopLevelActions gets a reference to the given TopLevelActions and assigns it to the TopLevelActions field.
func (o *IntegratorCardPayloadResponse) SetTopLevelActions(v TopLevelActions) {
	o.TopLevelActions = &v
}

// GetSections returns the Sections field value if set, zero value otherwise.
func (o *IntegratorCardPayloadResponse) GetSections() []IntegratorObjectResult {
	if o == nil || IsNil(o.Sections) {
		var ret []IntegratorObjectResult
		return ret
	}
	return o.Sections
}

// GetSectionsOk returns a tuple with the Sections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegratorCardPayloadResponse) GetSectionsOk() ([]IntegratorObjectResult, bool) {
	if o == nil || IsNil(o.Sections) {
		return nil, false
	}
	return o.Sections, true
}

// HasSections returns a boolean if a field has been set.
func (o *IntegratorCardPayloadResponse) HasSections() bool {
	if o != nil && !IsNil(o.Sections) {
		return true
	}

	return false
}

// SetSections gets a reference to the given []IntegratorObjectResult and assigns it to the Sections field.
func (o *IntegratorCardPayloadResponse) SetSections(v []IntegratorObjectResult) {
	o.Sections = v
}

// GetResponseVersion returns the ResponseVersion field value if set, zero value otherwise.
func (o *IntegratorCardPayloadResponse) GetResponseVersion() string {
	if o == nil || IsNil(o.ResponseVersion) {
		var ret string
		return ret
	}
	return *o.ResponseVersion
}

// GetResponseVersionOk returns a tuple with the ResponseVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegratorCardPayloadResponse) GetResponseVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseVersion) {
		return nil, false
	}
	return o.ResponseVersion, true
}

// HasResponseVersion returns a boolean if a field has been set.
func (o *IntegratorCardPayloadResponse) HasResponseVersion() bool {
	if o != nil && !IsNil(o.ResponseVersion) {
		return true
	}

	return false
}

// SetResponseVersion gets a reference to the given string and assigns it to the ResponseVersion field.
func (o *IntegratorCardPayloadResponse) SetResponseVersion(v string) {
	o.ResponseVersion = &v
}

func (o IntegratorCardPayloadResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegratorCardPayloadResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["totalCount"] = o.TotalCount
	if !IsNil(o.AllItemsLinkUrl) {
		toSerialize["allItemsLinkUrl"] = o.AllItemsLinkUrl
	}
	if !IsNil(o.CardLabel) {
		toSerialize["cardLabel"] = o.CardLabel
	}
	if !IsNil(o.TopLevelActions) {
		toSerialize["topLevelActions"] = o.TopLevelActions
	}
	if !IsNil(o.Sections) {
		toSerialize["sections"] = o.Sections
	}
	if !IsNil(o.ResponseVersion) {
		toSerialize["responseVersion"] = o.ResponseVersion
	}
	return toSerialize, nil
}

type NullableIntegratorCardPayloadResponse struct {
	value *IntegratorCardPayloadResponse
	isSet bool
}

func (v NullableIntegratorCardPayloadResponse) Get() *IntegratorCardPayloadResponse {
	return v.value
}

func (v *NullableIntegratorCardPayloadResponse) Set(val *IntegratorCardPayloadResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegratorCardPayloadResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegratorCardPayloadResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegratorCardPayloadResponse(val *IntegratorCardPayloadResponse) *NullableIntegratorCardPayloadResponse {
	return &NullableIntegratorCardPayloadResponse{value: val, isSet: true}
}

func (v NullableIntegratorCardPayloadResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegratorCardPayloadResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
