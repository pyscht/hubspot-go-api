/*
Schemas

Testing CoreApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package schemas

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/pyscht/hubspot-go-api/apis/crm/schemas"
)

func Test_schemas_CoreApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CoreApiService DeleteCrmObjectSchemasV3SchemasObjectTypeArchive", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var objectType string

		httpRes, err := apiClient.CoreApi.DeleteCrmObjectSchemasV3SchemasObjectTypeArchive(context.Background(), objectType).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CoreApiService DeleteCrmObjectSchemasV3SchemasObjectTypeAssociationsAssociationIdentifierArchiveAssociation", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var objectType string
		var associationIdentifier string

		httpRes, err := apiClient.CoreApi.DeleteCrmObjectSchemasV3SchemasObjectTypeAssociationsAssociationIdentifierArchiveAssociation(context.Background(), objectType, associationIdentifier).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CoreApiService GetCrmObjectSchemasV3SchemasGetAll", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CoreApi.GetCrmObjectSchemasV3SchemasGetAll(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CoreApiService GetCrmObjectSchemasV3SchemasObjectTypeGetById", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var objectType string

		resp, httpRes, err := apiClient.CoreApi.GetCrmObjectSchemasV3SchemasObjectTypeGetById(context.Background(), objectType).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CoreApiService PatchCrmObjectSchemasV3SchemasObjectTypeUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var objectType string

		resp, httpRes, err := apiClient.CoreApi.PatchCrmObjectSchemasV3SchemasObjectTypeUpdate(context.Background(), objectType).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CoreApiService PostCrmObjectSchemasV3SchemasCreate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CoreApi.PostCrmObjectSchemasV3SchemasCreate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CoreApiService PostCrmObjectSchemasV3SchemasObjectTypeAssociationsCreateAssociation", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var objectType string

		resp, httpRes, err := apiClient.CoreApi.PostCrmObjectSchemasV3SchemasObjectTypeAssociationsCreateAssociation(context.Background(), objectType).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
