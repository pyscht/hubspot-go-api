/*
Timeline events

Testing TokensApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package timeline

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/pyscht/hubspot-go-api/apis/crm/timeline"
)

func Test_timeline_TokensApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test TokensApiService DeleteIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdTokensTokenNameArchive", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var eventTemplateId string
		var tokenName string
		var appId int32

		httpRes, err := apiClient.TokensApi.DeleteIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdTokensTokenNameArchive(context.Background(), eventTemplateId, tokenName, appId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TokensApiService PostIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdTokensCreate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var eventTemplateId string
		var appId int32

		resp, httpRes, err := apiClient.TokensApi.PostIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdTokensCreate(context.Background(), eventTemplateId, appId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TokensApiService PutIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdTokensTokenNameUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var eventTemplateId string
		var tokenName string
		var appId int32

		resp, httpRes, err := apiClient.TokensApi.PutIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdTokensTokenNameUpdate(context.Background(), eventTemplateId, tokenName, appId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
