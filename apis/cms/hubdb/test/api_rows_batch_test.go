/*
HubDB endpoints

Testing RowsBatchApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package hubdb

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/pyscht/hubspot-go-api/apis/cms/hubdb"
)

func Test_hubdb_RowsBatchApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test RowsBatchApiService PostCmsV3HubdbTablesTableIdOrNameRowsBatchReadReadTableRows", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var tableIdOrName string

		resp, httpRes, err := apiClient.RowsBatchApi.PostCmsV3HubdbTablesTableIdOrNameRowsBatchReadReadTableRows(context.Background(), tableIdOrName).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RowsBatchApiService PostCmsV3HubdbTablesTableIdOrNameRowsDraftBatchCloneCloneDraftTableRows", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var tableIdOrName string

		resp, httpRes, err := apiClient.RowsBatchApi.PostCmsV3HubdbTablesTableIdOrNameRowsDraftBatchCloneCloneDraftTableRows(context.Background(), tableIdOrName).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RowsBatchApiService PostCmsV3HubdbTablesTableIdOrNameRowsDraftBatchCreateCreateDraftTableRows", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var tableIdOrName string

		resp, httpRes, err := apiClient.RowsBatchApi.PostCmsV3HubdbTablesTableIdOrNameRowsDraftBatchCreateCreateDraftTableRows(context.Background(), tableIdOrName).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RowsBatchApiService PostCmsV3HubdbTablesTableIdOrNameRowsDraftBatchPurgePurgeDraftTableRows", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var tableIdOrName string

		httpRes, err := apiClient.RowsBatchApi.PostCmsV3HubdbTablesTableIdOrNameRowsDraftBatchPurgePurgeDraftTableRows(context.Background(), tableIdOrName).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RowsBatchApiService PostCmsV3HubdbTablesTableIdOrNameRowsDraftBatchReadReadDraftTableRows", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var tableIdOrName string

		resp, httpRes, err := apiClient.RowsBatchApi.PostCmsV3HubdbTablesTableIdOrNameRowsDraftBatchReadReadDraftTableRows(context.Background(), tableIdOrName).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RowsBatchApiService PostCmsV3HubdbTablesTableIdOrNameRowsDraftBatchReplaceReplaceDraftTableRows", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var tableIdOrName string

		resp, httpRes, err := apiClient.RowsBatchApi.PostCmsV3HubdbTablesTableIdOrNameRowsDraftBatchReplaceReplaceDraftTableRows(context.Background(), tableIdOrName).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RowsBatchApiService PostCmsV3HubdbTablesTableIdOrNameRowsDraftBatchUpdateUpdateDraftTableRows", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var tableIdOrName string

		resp, httpRes, err := apiClient.RowsBatchApi.PostCmsV3HubdbTablesTableIdOrNameRowsDraftBatchUpdateUpdateDraftTableRows(context.Background(), tableIdOrName).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
