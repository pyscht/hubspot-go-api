/*
Calling Extensions API

Testing SettingsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package calling

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/pyscht/hubspot-go-api/apis/crm/calling"
)

func Test_calling_SettingsApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test SettingsApiService DeleteCrmV3ExtensionsCallingAppIdSettingsArchive", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var appId int32

		httpRes, err := apiClient.SettingsApi.DeleteCrmV3ExtensionsCallingAppIdSettingsArchive(context.Background(), appId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SettingsApiService GetCrmV3ExtensionsCallingAppIdSettingsGetById", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var appId int32

		resp, httpRes, err := apiClient.SettingsApi.GetCrmV3ExtensionsCallingAppIdSettingsGetById(context.Background(), appId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SettingsApiService PatchCrmV3ExtensionsCallingAppIdSettingsUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var appId int32

		resp, httpRes, err := apiClient.SettingsApi.PatchCrmV3ExtensionsCallingAppIdSettingsUpdate(context.Background(), appId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SettingsApiService PostCrmV3ExtensionsCallingAppIdSettingsCreate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var appId int32

		resp, httpRes, err := apiClient.SettingsApi.PostCrmV3ExtensionsCallingAppIdSettingsCreate(context.Background(), appId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
