/*
Timeline events

Testing EventsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package timeline

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/pyscht/hubspot-go-api/apis/crm/timeline"
)

func Test_timeline_EventsApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test EventsApiService GetIntegratorsTimelineV3EventsEventTemplateIdEventIdDetailGetDetailById", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var eventTemplateId string
		var eventId string

		resp, httpRes, err := apiClient.EventsApi.GetIntegratorsTimelineV3EventsEventTemplateIdEventIdDetailGetDetailById(context.Background(), eventTemplateId, eventId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EventsApiService GetIntegratorsTimelineV3EventsEventTemplateIdEventIdGetById", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var eventTemplateId string
		var eventId string

		resp, httpRes, err := apiClient.EventsApi.GetIntegratorsTimelineV3EventsEventTemplateIdEventIdGetById(context.Background(), eventTemplateId, eventId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EventsApiService GetIntegratorsTimelineV3EventsEventTemplateIdEventIdRenderGetRenderById", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var eventTemplateId string
		var eventId string

		resp, httpRes, err := apiClient.EventsApi.GetIntegratorsTimelineV3EventsEventTemplateIdEventIdRenderGetRenderById(context.Background(), eventTemplateId, eventId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EventsApiService PostIntegratorsTimelineV3EventsBatchCreateCreateBatch", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.EventsApi.PostIntegratorsTimelineV3EventsBatchCreateCreateBatch(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EventsApiService PostIntegratorsTimelineV3EventsCreate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.EventsApi.PostIntegratorsTimelineV3EventsCreate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
