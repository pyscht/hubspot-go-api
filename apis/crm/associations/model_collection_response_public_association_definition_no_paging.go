/*
Associations

Associations define the relationships between objects in HubSpot. These endpoints allow you to create, read, and remove associations.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package associations

import (
	"encoding/json"
)

// checks if the CollectionResponsePublicAssociationDefinitionNoPaging type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CollectionResponsePublicAssociationDefinitionNoPaging{}

// CollectionResponsePublicAssociationDefinitionNoPaging struct for CollectionResponsePublicAssociationDefinitionNoPaging
type CollectionResponsePublicAssociationDefinitionNoPaging struct {
	Results []PublicAssociationDefinition `json:"results"`
}

// NewCollectionResponsePublicAssociationDefinitionNoPaging instantiates a new CollectionResponsePublicAssociationDefinitionNoPaging object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionResponsePublicAssociationDefinitionNoPaging(results []PublicAssociationDefinition) *CollectionResponsePublicAssociationDefinitionNoPaging {
	this := CollectionResponsePublicAssociationDefinitionNoPaging{}
	this.Results = results
	return &this
}

// NewCollectionResponsePublicAssociationDefinitionNoPagingWithDefaults instantiates a new CollectionResponsePublicAssociationDefinitionNoPaging object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionResponsePublicAssociationDefinitionNoPagingWithDefaults() *CollectionResponsePublicAssociationDefinitionNoPaging {
	this := CollectionResponsePublicAssociationDefinitionNoPaging{}
	return &this
}

// GetResults returns the Results field value
func (o *CollectionResponsePublicAssociationDefinitionNoPaging) GetResults() []PublicAssociationDefinition {
	if o == nil {
		var ret []PublicAssociationDefinition
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *CollectionResponsePublicAssociationDefinitionNoPaging) GetResultsOk() ([]PublicAssociationDefinition, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *CollectionResponsePublicAssociationDefinitionNoPaging) SetResults(v []PublicAssociationDefinition) {
	o.Results = v
}

func (o CollectionResponsePublicAssociationDefinitionNoPaging) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CollectionResponsePublicAssociationDefinitionNoPaging) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["results"] = o.Results
	return toSerialize, nil
}

type NullableCollectionResponsePublicAssociationDefinitionNoPaging struct {
	value *CollectionResponsePublicAssociationDefinitionNoPaging
	isSet bool
}

func (v NullableCollectionResponsePublicAssociationDefinitionNoPaging) Get() *CollectionResponsePublicAssociationDefinitionNoPaging {
	return v.value
}

func (v *NullableCollectionResponsePublicAssociationDefinitionNoPaging) Set(val *CollectionResponsePublicAssociationDefinitionNoPaging) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionResponsePublicAssociationDefinitionNoPaging) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionResponsePublicAssociationDefinitionNoPaging) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionResponsePublicAssociationDefinitionNoPaging(val *CollectionResponsePublicAssociationDefinitionNoPaging) *NullableCollectionResponsePublicAssociationDefinitionNoPaging {
	return &NullableCollectionResponsePublicAssociationDefinitionNoPaging{value: val, isSet: true}
}

func (v NullableCollectionResponsePublicAssociationDefinitionNoPaging) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionResponsePublicAssociationDefinitionNoPaging) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
