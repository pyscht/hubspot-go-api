/*
HubDB endpoints

Testing RowsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package hubdb

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/pyscht/hubspot-go-api/apis/cms/hubdb"
)

func Test_hubdb_RowsApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test RowsApiService DeleteCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftPurgeDraftTableRow", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var tableIdOrName string
		var rowId string

		httpRes, err := apiClient.RowsApi.DeleteCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftPurgeDraftTableRow(context.Background(), tableIdOrName, rowId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RowsApiService GetCmsV3HubdbTablesTableIdOrNameRowsDraftReadDraftTableRows", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var tableIdOrName string

		resp, httpRes, err := apiClient.RowsApi.GetCmsV3HubdbTablesTableIdOrNameRowsDraftReadDraftTableRows(context.Background(), tableIdOrName).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RowsApiService GetCmsV3HubdbTablesTableIdOrNameRowsGetTableRows", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var tableIdOrName string

		resp, httpRes, err := apiClient.RowsApi.GetCmsV3HubdbTablesTableIdOrNameRowsGetTableRows(context.Background(), tableIdOrName).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RowsApiService GetCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftGetDraftTableRowById", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var tableIdOrName string
		var rowId string

		resp, httpRes, err := apiClient.RowsApi.GetCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftGetDraftTableRowById(context.Background(), tableIdOrName, rowId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RowsApiService GetCmsV3HubdbTablesTableIdOrNameRowsRowIdGetTableRow", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var tableIdOrName string
		var rowId string

		resp, httpRes, err := apiClient.RowsApi.GetCmsV3HubdbTablesTableIdOrNameRowsRowIdGetTableRow(context.Background(), tableIdOrName, rowId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RowsApiService PatchCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftUpdateDraftTableRow", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var tableIdOrName string
		var rowId string

		resp, httpRes, err := apiClient.RowsApi.PatchCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftUpdateDraftTableRow(context.Background(), tableIdOrName, rowId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RowsApiService PostCmsV3HubdbTablesTableIdOrNameRowsCreateTableRow", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var tableIdOrName string

		resp, httpRes, err := apiClient.RowsApi.PostCmsV3HubdbTablesTableIdOrNameRowsCreateTableRow(context.Background(), tableIdOrName).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RowsApiService PostCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftCloneCloneDraftTableRow", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var tableIdOrName string
		var rowId string

		resp, httpRes, err := apiClient.RowsApi.PostCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftCloneCloneDraftTableRow(context.Background(), tableIdOrName, rowId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RowsApiService PutCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftReplaceDraftTableRow", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var tableIdOrName string
		var rowId string

		resp, httpRes, err := apiClient.RowsApi.PutCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftReplaceDraftTableRow(context.Background(), tableIdOrName, rowId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
